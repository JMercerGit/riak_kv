%% -*- erlang -*-
{minimum_otp_vsn, "22.0"}.

{deps,
 [{sidejob, {git, "https://github.com/basho/sidejob.git", {tag, "2.1.0"}}},
  {redbug, {git, "https://github.com/massemanet/redbug", {tag, "1.2.1"}}},
  {recon, {git, "https://github.com/ferd/recon", {tag, "2.4.0"}}},
  {sext, {git, "https://github.com/uwiger/sext.git", {tag, "1.4.1"}}},
  {riak_dt, {git, "https://github.com/basho/riak_dt.git", {tag, "riak_kv-3.0.0"}}},
  {hyper, {git, "https://github.com/basho/hyper", {tag, "1.1.0"}}},
  {kv_index_tictactree, {git, "https://github.com/martinsumner/kv_index_tictactree.git", {tag, "0.9.18"}}},
  {riakhttpc, {git, "https://github.com/TI-Tokyo/riak-erlang-http-client", {tag, "3.0.4+https"}}},
  {bitcask, {git, "https://github.com/basho/bitcask.git", {tag, "2.1.0"}}},

  %% deps with TS-specific changes, or required by TS
  {riak_core, {git, "https://github.com/TI-Tokyo/riak_core.git", {branch, "riak_ts-develop-3.0"}}},
  {riak_api, {git, "https://github.com/TI-Tokyo/riak_api.git", {branch, "riak_ts-develop-3.0"}}},
  {riak_pipe, {git, "https://github.com/TI-Tokyo/riak_pipe.git", {branch, "riak_ts-develop-3.0"}}},
  {riak_ql, {git, "https://github.com/TI-Tokyo/riak_ql.git", {branch, "riak_ts-develop-3.0"}}},
  {jam, {git, "https://github.com/TI-Tokyo/jam.git", {branch, "riak_ts-develop-3.0"}}},
  {msgpack, "0.7.0"}
 ]
}.

{project_plugins,
 [{rebar3_gpb_plugin, {git, "https://github.com/basho/rebar3_gpb_plugin", {tag, "2.15.1+riak.3.0.4"}}},
  {eqc_rebar, {git, "https://github.com/Quviq/eqc-rebar", {branch, "master"}}}
 ]
}.

{erl_first_files,
 ["src/riak_kv_backend.erl"]
}.

{provider_hooks,
 [{pre, [{compile, {protobuf, compile}}]}
 ]
}.

{erl_opts,
 [warnings_as_errors,
  {parse_transform, lager_transform},
  {lager_extra_sinks, [object]},
  {src_dirs, ["src", "priv/tracers"]},
  {i, "./_build/default/plugins/gpb/include"},
  {d, 'TEST_FS2_BACKEND_IN_RIAK_KV'}
 ]
}.

{gpb_opts,
 [{module_name_suffix, "_pb"},
  {i, "src"}
 ]
}.

{eunit_opts,
 [no_tty,  %% This turns off the default output, MUST HAVE
  {report, {eunit_progress, [colored, profile]}} %% Use `profile' to see test timing information
  %% Uses the progress formatter with ANSI-colored output
 ]
}.

{cover_enabled, false}.

{dialyzer, [{plt_apps, all_deps}]}.

{profiles,
 [{test,
   [{deps,
     [meck,
      {eunit_formatters, {git, "https://github.com/seancribbs/eunit_formatters", {tag, "v0.5.0"}}}
     ]
    }
   ]
  },
  {eqc, [{deps, [meck]}]},
  {gha, [{erl_opts, [{d, 'GITHUBEXCLUDE'}]}]}
 ]}.

